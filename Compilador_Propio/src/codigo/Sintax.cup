package codigo;

import java_cup.runtime.*;
import java.util.ArrayList;
import java.util.*;
import java.io.*;

parser code {:
private Symbol s;
    public void syntax_error(Symbol s){
        this.s = s;
    }
    public Symbol getS(){
        return this.s;
}

:} ;
terminal TKN_FUNCION,TKN_COMA,TKN_IGUAL ,TKN_MAIN ,TKN_OR ,TKN_IMPRIMIR ;
terminal TKN_DIGITO,TKN_IF ,TKN_DIGITOFLOAT ,TKN_WHILE,TKN_PARENTESISI ,TKN_PARENTESISD ,TKN_LLAVEIZ ,TKN_LLAVEDER ; 
terminal TKN_COMILLA ,TKN_AND,TKN_OPADICION ,TKN_OPREL ,TKN_MULTI ,TKN_FOR ,TKN_VOID,TKN_RETURN;
terminal TKN_DOSPUNTOS, TKN_SWITCH ,TKN_CASE ,TKN_ENDCASE ,TKN_DEFAULT,TKN_LETRA,TKN_FALSE,TKN_TRUE ,TKN_INT ,TKN_CHAR ,TKN_BOOLEAN ,TKN_ASIGNACCION,TKN_ID;
non terminal INICIO,TIPOSW,PRUEBA,TIPOPRI, IMPRIMIR,WHILE,CASOSA,FUNCIONES,CASOS,FUNCION,TIPO,VALOR,STATEMENTS,LLAMADO,IF,FOR,SWITCH, CONDICION,CONDICIONP,LISTA_ARGS,OPCONDICION,DECLARACION;

//GRAMATICA PARA EL MAIN Y DESPUES FUNCIONES
start with INICIO;
INICIO ::= TKN_MAIN TKN_LLAVEIZ STATEMENTS TKN_LLAVEDER FUNCIONES
;
// FUNCIONES O NO DESPUES DEL MAIN
FUNCIONES::= FUNCION FUNCIONES:s
            |    
;
//GRAMATICA PARA FUNCIONES

FUNCION::= 
{:System.out.println("DENTRO DE funcion");:}
TKN_FUNCION TIPO TKN_ID TKN_PARENTESISI LISTA_ARGS TKN_PARENTESISD TKN_LLAVEIZ STATEMENTS TKN_RETURN TKN_ID TKN_LLAVEDER

;
//LLAMADO DE FUNCIONES
LLAMADO::= 
    {:System.out.println("DENTRO DE LLAMADO");:} 
TKN_ID TKN_PARENTESISI LISTA_ARGS TKN_PARENTESISD
;
// TIPO PARA CUALQUIER COSA
TIPO::=
    TKN_VOID
    |TKN_INT
    |TKN_CHAR
    |TKN_BOOLEAN
    |TKN_DIGITOFLOAT
    |TKN_ID
;
//STATEMENTS!! OJO SIEMPRE AGREGAR NUEVAS GRAMATICAS PARA QUE NO TE TIRE LOS WARININGS
STATEMENTS ::= 
{:System.out.println("DENTRO DE statements");:} 
           DECLARACION STATEMENTS:s
            |FOR STATEMENTS:s
            |IF STATEMENTS:s
            |WHILE STATEMENTS:s
            |LLAMADO STATEMENTS:s
            |SWITCH STATEMENTS:s
            |IMPRIMIR STATEMENTS:s
            |
;
//BLOQUE IF
IF::=   
    {:System.out.println("DENTRO DE IF");:} 
TKN_IF TKN_PARENTESISI CONDICION TKN_PARENTESISD TKN_LLAVEIZ STATEMENTS TKN_LLAVEDER
;
//DECLARACIONES
DECLARACION::=
{:System.out.println("DENTRO DE DECLARACION");:} 
    TKN_INT TKN_ID TKN_ASIGNACCION TKN_DIGITO
    |TKN_BOOLEAN TKN_ID TKN_ASIGNACCION TKN_TRUE
    |TKN_BOOLEAN TKN_ID TKN_ASIGNACCION TKN_FALSE
    |TKN_CHAR  TKN_ID  TKN_ASIGNACCION TKN_LETRA
;
//BLOQUE FOOOR
FOR ::=
{:System.out.println("DENTRO DE FOR");:} 
    TKN_FOR TKN_PARENTESISI TKN_DIGITO TKN_DOSPUNTOS TKN_DIGITO TKN_PARENTESISD TKN_LLAVEIZ STATEMENTS TKN_LLAVEDER
;

//LISTA DE ARGUMENTOS
LISTA_ARGS::= VALOR:v
        | VALOR:v TKN_COMA LISTA_ARGS
        |  
;
//bloque while
WHILE::=
{:System.out.println("DENTRO DE WHILE"); :} 
TKN_WHILE:w TKN_PARENTESISI CONDICION TKN_PARENTESISD TKN_LLAVEIZ STATEMENTS TKN_LLAVEDER
;

//bloque switch
SWITCH::=
    {:System.out.println("DENTRO DE SWITCH");:}
TKN_SWITCH TKN_PARENTESISI TKN_ID TKN_PARENTESISD TKN_LLAVEIZ CASOSA TKN_LLAVEDER 
;
TIPOSW::=
    TKN_DIGITO
    |TKN_LETRA
;
//CASOS
CASOSA::=
    {:System.out.println("DENTRO DE CASOSABB");:}
    TKN_CASE TIPOSW TKN_DOSPUNTOS STATEMENTS TKN_ENDCASE CASOS
;
//CASO SOLO, DEFAULT O VACIO
CASOS::=
    CASOSA
    |TKN_DEFAULT TKN_DOSPUNTOS STATEMENTS
     
;

//IMPRIMIR
IMPRIMIR::=
{:System.out.println("DENTRO DE sout");:}
TKN_IMPRIMIR TKN_PARENTESISI TKN_COMILLA TIPOPRI TKN_COMILLA TKN_PARENTESISD
;
TIPOPRI::=
    TKN_DIGITO
    |TKN_ID
    |TKN_LETRA
;

//CONDICIONES
CONDICION ::= CONDICIONP TKN_AND CONDICION
            | CONDICIONP TKN_OR CONDICION
            | CONDICIONP
;
CONDICIONP::= VALOR OPCONDICION VALOR
;
OPCONDICION::= TKN_OPREL 
                | TKN_IGUAL 
;
VALOR::= TKN_DIGITO 
                | TKN_TRUE 
                | TKN_FALSE
                | TKN_ID               
;
